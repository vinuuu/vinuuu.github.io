var assert = require('chai').assert;
var mocha = require('mocha');
var nspGulp = require('../');

describe('Invalid Usage', function() {

    it('should advise with correct options', function(done) {
        nspGulp('./someInvalidFile.json', function(err) {
            assert(err);
            assert(err.message === 'Please Specify Valid Path');
            done();
        });
    });

    it('should advise that package.json was not found', function(done) {
        nspGulp('../someInvalidPath/package.json', function(err) {
            assert(err);
            assert(err.message
                .indexOf('Make sure you have a package.json available') > -1);
            done();
        });
    });

    it('should advise that shrinkwrap.json was not found', function(done) {
        nspGulp('../someInvalidPath/shrinkwrap.json', function(err) {
            assert(err);
            assert(err.message.indexOf('No file exists') > -1);
            done();
        });
    });
});

describe('Package.json Usage', function() {
    this.timeout(60000);

    it('should finish with no errors and no vulns found', function(done) {
        nspGulp('./test/notVulnerables/package.json', function(err) {
            assert(!err);
            done();
        });
    });

    it('should finish with vulnerabilities found', function(done) {
        nspGulp('./test/vulnerables/package.json', function(err) {
            assert(err);
            done();
        });
    });

});

describe('Shrinkwrap.json Usage', function() {
    this.timeout(60000);

    it('should finish with no errors and no vulns found', function(done) {
        nspGulp('./test/notVulnerables/npm-shrinkwrap.json', function(err) {
            assert(!err);
            done();
        });
    });

    it('should finish with vulns found', function(done) {
        nspGulp('./test/vulnerables/npm-shrinkwrap.json', function(err) {
            assert(err);
            done();
        });
    });
});
